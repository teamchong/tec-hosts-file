on:
  schedule:
    - cron: '*/1 * * * *'

name: Refresh public IP from AWS ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Assign $TASK_ARN
      uses: actions/github-script@v3.1.0
      with:
        script: |
          echo "TASK_ARN=$(aws ecs list-tasks --cluster arn:aws:ecs:ap-southeast-1:949519472813:cluster/prd-etg-docker --family prd-marketing-website --desired-status RUNNING --no-paginate --query 'taskArns[0]' --output text)" >> $GITHUB_ENV

    - name: GitHub Script
      uses: actions/github-script@v3.1.0
      if: ${{ !!TASK_ARN }}
      with:
        script: |
         echo "TASK_ENI=$(aws ecs describe-tasks --cluster arn:aws:ecs:ap-southeast-1:949519472813:cluster/prd-etg-docker --tasks $TASK_ARN --no-paginate --query '(sort_by(tasks[?attachments[0].status != `ATTACHING` && attachments[0].details[? name == `networkInterfaceId`].value != ``], &version)[-1].attachments[0].details[? name == `networkInterfaceId`].value)[0]' --output text)" >> $GITHUB_ENV

    - name: Assign $TASK_ARN
      uses: actions/github-script@v3.1.0
      if: ${{ !!TASK_ENI }}
      with:
        script: |
          echo "TASK_PUBLIC_IP=$(aws ec2 describe-network-interfaces --network-interface-ids eni-01791e7c09b43174a --no-paginate --query '(NetworkInterfaces[? Association.PublicIp != ``])[0].Association.PublicIp' --output text)" >> $GITHUB_ENV

    - name: Assign $TASK_ARN
      uses: actions/github-script@v3.1.0
      if: ${{ !!TASK_PUBLIC_IP }}
      with:
        script: |
          echo $TASK_PUBLIC_IP
